import React from "react";
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import Board from "./Board";
import Board2 from "./Board2";
import { useState, useEffect } from "react";
import { useRouter } from "next/router";

const Game = () => {
  // persist user from Login Page by grabbing from localStorage
  const [user, setUser] = useState(null);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const router = useRouter(); // Hooks can only exist in functional components

  useEffect(() => {
    const loggedInUser = localStorage.getItem("user");
    if (loggedInUser) {
      const foundUser = JSON.parse(loggedInUser); // JSON.parse() turns JSON object into Javascript object
      setUser(foundUser);
    }
  }, []);

  const navigateToHome = () => {
    // one method to nav pages
    router.push("/frontend/LoginForm");
    return;
  };

  const handleLogout = () => {
    setUser(null);
    setEmail("");
    setPassword("");
    localStorage.clear();
    navigateToHome();
  };

  return (
    <>
      <Head>
        <title>omok</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Omok - Connect 5</h1>
        <button
          onClick={() => {
            handleLogout();
          }}
        >
          logout
        </button>

        <button
          onClick={async () => {
            try {
              // Make a GET request to the API endpoint
              const response = await fetch("/api/find-all-games");
              // Check if the response is ok (status code in the range 200-299)
              if (!response.ok) {
                throw new Error("Network response was not ok");
              }
              // Parse the response body as JSON
              const data = await response.json();
              // Do something with the data
              console.log(data);
            } catch (error) {
              console.error(
                "There has been a problem with your fetch operation:",
                error
              );
            }
          }}
        >
          Fetch Games
        </button>

        <button
          onClick={async () => {
            try {
              // to have information about the logged-in user on the server-side, you'll have to send that information as part of the request >>> `body` param
              const loggedInUser = localStorage.getItem("user");
              if (loggedInUser) {
                const user = JSON.parse(loggedInUser);
                // Make a POST request to the API endpoint
                const response = await fetch("/api/join-game", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({ user: loggedInUser }),
                });

                // Check if the response is ok (status code in the range 200-299)
                if (!response.ok) {
                  throw new Error("Network response was not ok");
                }

                // Parse the response body as JSON
                const data = await response.json();

                // Do something with the data
                console.log(data);
              }
            } catch (error) {
              console.error(
                "There has been a problem with your fetch operation:",
                error
              );
            }
          }}
        >
          Join a Game
        </button>

        <div>
          {/* Conditionally render the user email */}
          {user && (user as any).email ? (
            <div>{(user as any).email} is logged in</div>
          ) : null}
        </div>
        <div>
          <Board2 />
        </div>
      </main>
    </>
  );
};

export default Game;
